name: Continuous Integration

on: [push, pull_request]

jobs:
  clippy:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest, ubuntu-24.04-arm, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Check the lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --verbose -- -D warnings

  test:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest, macos-13, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run the tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --verbose

  formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Check the formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check --verbose

  build:
    needs: [clippy, formatting, test]
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-13, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build (release)
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --locked --release --bin smg

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "surreal-migraine-${{ matrix.os }}"
          path: target/release
          if-no-files-found: error
          retention-days: 7
